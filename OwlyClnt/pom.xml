
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.owly</groupId>
	<artifactId>OwlyClnt</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>OwlyClnt</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   		
		<OwlyClnt.name>${project.artifactId}</OwlyClnt.name>
		<OwlyClnt.tmp.folder>${basedir}\target\tmp-${project.artifactId}</OwlyClnt.tmp.folder>
		<OwlyClnt.target.folder>${basedir}\target</OwlyClnt.target.folder>
		<OwlyClnt.folder.name>OwlyClnt-${project.version}</OwlyClnt.folder.name>
		<OwlyClnt.folder>${OwlyClnt.tmp.folder}\${OwlyClnt.folder.name}</OwlyClnt.folder>
		<build.version>${project.version}</build.version>
		<installer.name>${project.artifactId}_Installer_${build.version}</installer.name>
	</properties>
  

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<comments>Apache License Version 2</comments>
		</license>
	</licenses>

	<organization>
		<name>OwlySrv</name>
		<url>http://www.OwlySrv.com</url>
	</organization>

	<developers>
		<developer>
			<id>tonimenen</id>
			<name>Antonio Menendez Lopez</name>
			<email>tonimemen@gmail.com</email>
			<url>http://www.OwlySrv.com</url>
			<organization>OwlySrv</organization>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>-2</timezone>
		</developer>
	</developers>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>attached</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
				
							<target name="package_generation">
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${env.USERPROFILE}\.m2\repository\ant-contrib\ant-contrib\1.0b3\ant-contrib-1.0b3.jar"/>
								<property name="nl" value="&#10;"/>
					
					<!-- Show properties of this project. -->
					<!-- absolute path of the project. -->
								<echo message="The home path is: ${basedir}"/>
	  				
	  				<!-- root directory of ant. -->
								<echo message="The Project name is: ${ant.project.name}"/>
								<echo message="The Ant version is: ${ant.version}"/>
								<echo message="The Java version is: ${ant.java.version}"/>
					
					
								<echo message="Preparing the installer"/>
					
					<!-- Cleanning all folders prior sending the new packages -->
								<delete dir="${OwlyClnt.folder}\Packaging"/>
					
					<!-- Create Folder where we are going to package -->
								<mkdir dir="${OwlyClnt.folder}\Packaging"/>
					
					<!-- Transfer packaging jar to previous folder -->
								<copy file="${OwlyClnt.target.folder}\${project.artifactId}-${project.version}-${project.packaging}-with-dependencies.jar" 
								tofile="${OwlyClnt.folder}\Packaging\${project.artifactId}-${project.version}-${project.packaging}.jar"/>
					
					<!-- Create a file with version of the package -->
								<echo file="${OwlyClnt.folder}\Packaging\OwlyClnt.version" append="true">
									${project.artifactId}-${project.version}-${project.packaging}
								</echo>
								<copy file="${OwlyClnt.folder}\Packaging\OwlyClnt.version" 
								todir="${OwlyClnt.folder}\Packaging"/>
					<!-- Copy startup file to packaging folder -->
								<copy file="${basedir}\src\main\resources\installer\Start_OwlyClnt.sh" 
								todir="${OwlyClnt.folder}\Packaging"/>					
					<!-- Copy deamon to packaging folder -->
								<copy file="${basedir}\src\main\resources\installer\OwlyClntd" 
								todir="${OwlyClnt.folder}\Packaging"/>					
					
					<!-- Add licenses to packaging folder -->
								<copy file="${basedir}\LICENSE"	todir="${OwlyClnt.folder}\Packaging"/>					
								<copy file="${basedir}\NOTICE"	todir="${OwlyClnt.folder}\Packaging"/>
								<copy file="${basedir}\AUTHORS"	todir="${OwlyClnt.folder}\Packaging"/>
					
					
					
					
					<!-- Start preparing the install package -->
								<echo message="Packing ${project.artifactId} version ${build.version}${nl}"/>
					
								<property name="temp.pack.dir" value="${basedir}\target\pack"/>
								<property name="temp.pack.files.dir" value="${basedir}\target\pack-files"/>
								<property name="dist.dir" value="${basedir}\target\dist"/>
					
								<property name="inst.file" value="${temp.pack.dir}\${installer.name}.bin"/>
								<property name="inst.tar" value="${dist.dir}\${installer.name}.tar"/>
					
								<delete dir="${temp.pack.dir}"/>
								<delete dir="${temp.pack.files.dir}"/>
								<delete dir="${dist.dir}"/>
					
								<mkdir dir="${temp.pack.dir}"/>
								<mkdir dir="${temp.pack.files.dir}"/>
								<mkdir dir="${dist.dir}"/>
					
					<!-- Add file that will be in the package-->
								<copy todir="${temp.pack.files.dir}">
									<fileset dir="${basedir}\src\main\resources\installer">
										<include name="**/*"/>
									</fileset>
								</copy>
					<!-- Generate the tar file-->
								<fixcrlf srcdir="${temp.pack.files.dir}" eol="lf" includes="**/*" excludes=""/>
					
								<tar longfile="gnu" destfile="${temp.pack.dir}/files.tar">
									<tarfileset dir="${OwlyClnt.folder}\Packaging" includes="**/*" preserveLeadingSlashes="true" />
								</tar>
								
								<gzip src="${temp.pack.dir}\files.tar" destfile="${temp.pack.dir}\files.tar.gz"/>
					
								<concat destfile="${inst.file}" append="true" binary="true">
									<filelist dir="${temp.pack.files.dir}" files="install.sh"/>									
									<filelist dir="${temp.pack.dir}" files="files.tar.gz"/>
								</concat>
					
								<tar longfile="gnu" destfile="${inst.tar}">
									<tarfileset dir="${temp.pack.dir}" includes="*.bin" preserveLeadingSlashes="true" filemode="744"/>
									<tarfileset dir="${temp.pack.files.dir}" includes="*.properties, README.txt" preserveLeadingSlashes="true" filemode="744"/>
					
								</tar>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
      

		</plugins>
	</build>
    
    

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<dependency>
			<groupId>spark</groupId>
			<artifactId>spark</artifactId>
			<version>0.9.9.4-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.19</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>org.fusesource</groupId>
			<artifactId>sigar</artifactId>
			<version>1.6.4</version>
		</dependency>

	</dependencies>

	<repositories>
		<repository>
			<id>Spark repository</id>
			<url>http://www.sparkjava.com/nexus/content/repositories/spark/</url>
		</repository>

	</repositories>


    


</project>
